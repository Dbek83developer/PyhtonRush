# Создание и выполнение асинхронных функций

# Напишите программу, которая создает и выполняет несколько асинхронных функций,
# каждая из которых использует оператор await для ожидания завершения другой асинхронной функции.
import asyncio


# Определение корутины, которая будет выполнена с задержкой
async def say_after(delay, what):
    # Приостанавливаем выполнение на заданное время
    await asyncio.sleep(delay)
    print(what)


# Основная корутина
async def main():
    # Создаем задачи для параллельного выполнения корутин
    task1 = asyncio.create_task(say_after(1, 'hello'))
    task2 = asyncio.create_task(say_after(2, 'world'))

    # Ждем завершения обеих задач
    await task1
    await task2

# Запуск основной корутины
asyncio.run(main())
